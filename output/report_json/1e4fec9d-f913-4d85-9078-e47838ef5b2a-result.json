{"name": "test_button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://chromedriver.chromium.org/home", "trace": "self = <selenium.webdriver.chrome.service.Service object at 0x00000213786B8898>\n\n    def start(self) -> None:\n        \"\"\"Starts the Service.\n    \n        :Exceptions:\n         - WebDriverException : Raised either when it can't start the service\n           or when it can't connect to the service\n        \"\"\"\n        try:\n            self._start_process(self.path)\n        except WebDriverException as err:\n            if \"executable needs to be in PATH\" in err.msg:\n                logger.debug(\"driver not found in PATH, trying Selenium Manager\")\n                browser = self.__class__.__module__.split(\".\")[-2]\n    \n                try:\n>                   path = SeleniumManager().driver_location(browser)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.selenium_manager.SeleniumManager object at 0x0000021378FC2898>\nbrowser = 'chrome'\n\n    def driver_location(self, browser: str) -> str:\n        \"\"\"\n        Determines the path of the correct driver.\n        :Args:\n         - browser: which browser to get the driver path for.\n        :Returns: The driver path to use\n        \"\"\"\n        allowed = (\"chrome\", \"firefox\", \"edge\", \"ie\")\n        if browser not in allowed:\n            raise SeleniumManagerException(f\"{browser} is not a valid browser.  Choose one of: {allowed}\")\n    \n        if browser == \"ie\":\n            browser = \"iexplorer\"\n    \n        binary, flag, browser = str(self.get_binary()), \"--browser\", browser\n>       result = self.run((binary, flag, browser))\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = ('D:\\\\gyhlw\\\\venv\\\\lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'chrome')\n\n    @staticmethod\n    def run(args: Tuple[str, str, str]) -> str:\n        \"\"\"\n        Executes the Selenium Manager Binary.\n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        command = \" \".join(args)\n        logger.debug(f\"Executing: {command}\")\n        completed_proc = subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n        stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n        if completed_proc.returncode:\n>           raise SeleniumManagerException(f\"Selenium manager failed for: {command}.\\n{stdout}{stderr}\")\nE           selenium.common.exceptions.SeleniumManagerException: Message: Selenium manager failed for: D:\\gyhlw\\venv\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome.\nE           ERROR\terror sending request for url (https://chromedriver.storage.googleapis.com/LATEST_RELEASE_119): error trying to connect: 远程主机强迫关闭了一个现有的连接。 (os error 10054)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:93: SeleniumManagerException\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_button():\n>       wd = webdriver.Chrome()\n\ncase\\touzi\\test_button.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:89: in __init__\n    keep_alive,\nvenv\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:101: in __init__\n    self.service.start()\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py:98: in start\n    raise err\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py:88: in start\n    self._start_process(self.path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x00000213786B8898>\npath = 'chromedriver'\n\n    def _start_process(self, path: str) -> None:\n        \"\"\"Creates a subprocess by executing the command provided.\n    \n        :param cmd: full command to execute\n        \"\"\"\n        cmd = [path]\n        cmd.extend(self.command_line_args())\n        try:\n            self.process = subprocess.Popen(\n                cmd,\n                env=self.env,\n                close_fds=system() != \"Windows\",\n                stdout=self.log_file,\n                stderr=self.log_file,\n                stdin=PIPE,\n                creationflags=self.creation_flags,\n            )\n            logger.debug(f\"Started executable: `{self.path}` in a child process with pid: {self.process.pid}\")\n        except TypeError:\n            raise\n        except OSError as err:\n            if err.errno == errno.ENOENT:\n                raise WebDriverException(\n>                   f\"'{os.path.basename(self.path)}' executable needs to be in PATH. {self.start_error_message}\"\n                )\nE               selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://chromedriver.chromium.org/home\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py:210: WebDriverException"}, "start": 1700189307173, "stop": 1700189307702, "uuid": "513fa306-d7c5-4de4-b7ff-5f673ce8731c", "historyId": "9d0475bb7b2fa0ef2c19f3121dd25f10", "testCaseId": "63548d930610fc1eaa16fd8fa46f3c3e", "fullName": "case.touzi.test_button#test_button", "labels": [{"name": "parentSuite", "value": "case.touzi"}, {"name": "suite", "value": "test_button"}, {"name": "host", "value": "mrzhai"}, {"name": "thread", "value": "23032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.touzi.test_button"}]}