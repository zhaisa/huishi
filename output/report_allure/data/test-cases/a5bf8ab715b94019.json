{
  "uid" : "a5bf8ab715b94019",
  "name" : "test_changqiguquan_yukeyanbeian",
  "fullName" : "case.touzi.test_changqiguquan_yukeyanbeian#test_changqiguquan_yukeyanbeian",
  "historyId" : "d65b966bab4f723b8f9cbefd1a1f3c09",
  "time" : {
    "start" : 1700189307801,
    "stop" : 1700189307991,
    "duration" : 190
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://chromedriver.chromium.org/home",
  "statusTrace" : "self = <selenium.webdriver.chrome.service.Service object at 0x00000213793A2630>\n\n    def start(self) -> None:\n        \"\"\"Starts the Service.\n    \n        :Exceptions:\n         - WebDriverException : Raised either when it can't start the service\n           or when it can't connect to the service\n        \"\"\"\n        try:\n            self._start_process(self.path)\n        except WebDriverException as err:\n            if \"executable needs to be in PATH\" in err.msg:\n                logger.debug(\"driver not found in PATH, trying Selenium Manager\")\n                browser = self.__class__.__module__.split(\".\")[-2]\n    \n                try:\n>                   path = SeleniumManager().driver_location(browser)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.selenium_manager.SeleniumManager object at 0x00000213793A29E8>\nbrowser = 'chrome'\n\n    def driver_location(self, browser: str) -> str:\n        \"\"\"\n        Determines the path of the correct driver.\n        :Args:\n         - browser: which browser to get the driver path for.\n        :Returns: The driver path to use\n        \"\"\"\n        allowed = (\"chrome\", \"firefox\", \"edge\", \"ie\")\n        if browser not in allowed:\n            raise SeleniumManagerException(f\"{browser} is not a valid browser.  Choose one of: {allowed}\")\n    \n        if browser == \"ie\":\n            browser = \"iexplorer\"\n    \n        binary, flag, browser = str(self.get_binary()), \"--browser\", browser\n>       result = self.run((binary, flag, browser))\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = ('D:\\\\gyhlw\\\\venv\\\\lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'chrome')\n\n    @staticmethod\n    def run(args: Tuple[str, str, str]) -> str:\n        \"\"\"\n        Executes the Selenium Manager Binary.\n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        command = \" \".join(args)\n        logger.debug(f\"Executing: {command}\")\n        completed_proc = subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n        stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n        if completed_proc.returncode:\n>           raise SeleniumManagerException(f\"Selenium manager failed for: {command}.\\n{stdout}{stderr}\")\nE           selenium.common.exceptions.SeleniumManagerException: Message: Selenium manager failed for: D:\\gyhlw\\venv\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome.\nE           ERROR\terror sending request for url (https://chromedriver.storage.googleapis.com/LATEST_RELEASE_119): error trying to connect: 远程主机强迫关闭了一个现有的连接。 (os error 10054)\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:93: SeleniumManagerException\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_changqiguquan_yukeyanbeian():\n>       wd = webdriver.Chrome()\n\ncase\\touzi\\test_changqiguquan_yukeyanbeian.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:89: in __init__\n    keep_alive,\nvenv\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:101: in __init__\n    self.service.start()\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py:98: in start\n    raise err\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py:88: in start\n    self._start_process(self.path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x00000213793A2630>\npath = 'chromedriver'\n\n    def _start_process(self, path: str) -> None:\n        \"\"\"Creates a subprocess by executing the command provided.\n    \n        :param cmd: full command to execute\n        \"\"\"\n        cmd = [path]\n        cmd.extend(self.command_line_args())\n        try:\n            self.process = subprocess.Popen(\n                cmd,\n                env=self.env,\n                close_fds=system() != \"Windows\",\n                stdout=self.log_file,\n                stderr=self.log_file,\n                stdin=PIPE,\n                creationflags=self.creation_flags,\n            )\n            logger.debug(f\"Started executable: `{self.path}` in a child process with pid: {self.process.pid}\")\n        except TypeError:\n            raise\n        except OSError as err:\n            if err.errno == errno.ENOENT:\n                raise WebDriverException(\n>                   f\"'{os.path.basename(self.path)}' executable needs to be in PATH. {self.start_error_message}\"\n                )\nE               selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://chromedriver.chromium.org/home\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py:210: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1700189306972,
      "stop" : 1700189307173,
      "duration" : 201
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "case.touzi"
  }, {
    "name" : "suite",
    "value" : "test_changqiguquan_yukeyanbeian"
  }, {
    "name" : "host",
    "value" : "mrzhai"
  }, {
    "name" : "thread",
    "value" : "23032-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "case.touzi.test_changqiguquan_yukeyanbeian"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a5bf8ab715b94019.json",
  "parameterValues" : [ ]
}