{
  "uid" : "3cf5630a318e2db9",
  "name" : "test_answerquestion[content0]",
  "fullName" : "test_answerquestion.Test_Answerquestion#test_answerquestion",
  "historyId" : "a3587e44e0e4ba925454d7b01b1c9365",
  "time" : {
    "start" : 1683944081016,
    "stop" : 1683944100462,
    "duration" : 19446
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"cascader-menu-985-0-0\"]/span\"}\n  (Session info: chrome=112.0.5615.138)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00CEDCE3+50899]\n\t(No symbol) [0x00C7E111]\n\t(No symbol) [0x00B85588]\n\t(No symbol) [0x00BB08F9]\n\t(No symbol) [0x00BB0AFB]\n\t(No symbol) [0x00BDF902]\n\t(No symbol) [0x00BCB944]\n\t(No symbol) [0x00BDE01C]\n\t(No symbol) [0x00BCB6F6]\n\t(No symbol) [0x00BA7708]\n\t(No symbol) [0x00BA886D]\n\tGetHandleVerifier [0x00F53EAE+2566302]\n\tGetHandleVerifier [0x00F892B1+2784417]\n\tGetHandleVerifier [0x00F8327C+2759788]\n\tGetHandleVerifier [0x00D85740+672048]\n\t(No symbol) [0x00C88872]\n\t(No symbol) [0x00C841C8]\n\t(No symbol) [0x00C842AB]\n\t(No symbol) [0x00C771B7]\n\tBaseThreadInitThunk [0x773A0099+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C87B6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77C87B3E+238]",
  "statusTrace" : "self = <case.test_answerquestion.Test_Answerquestion object at 0x000001C6D670C588>\ncontent = ('python',)\n\n    @pytest.mark.parametrize(\"content\",reda_pytestdata(yamlfile, 'test_answerquestion'))\n    def test_answerquestion(self,content):\n    \n        wd=webdriver.Chrome()\n        wd.maximize_window()\n        wd.get('http://10.22.33.101:32752/ind_net_fvue/index')\n        time.sleep(1)\n        try:\n            loginelement=wd.find_element(By.XPATH,'//*[@id=\"app\"]/section/div/div[1]/div/ul/div[2]/li[4]/div/span')\n            #//*[@id=\"app\"]/section/div/div[1]/div/ul/div[2]/li[4]/div/span\n        except NoSuchElementException:\n            print('没有登录这个元素')\n        loginelement.click()\n        # handles=wd.window_handles\n        # wd.switch_to.window(handles[1])\n        # print(wd.current_url)\n        wd.find_element(By.XPATH,'//*[@id=\"app\"]/section/section/main/div/div/div/div/form/div[2]/div/div[1]/input').send_keys('admin')\n        wd.find_element(By.XPATH,'//*[@id=\"app\"]/section/section/main/div/div/div/div/form/div[3]/div/div[1]/input').send_keys('Indnet123&')\n        wd.find_element(By.XPATH,'//*[@id=\"app\"]/section/section/main/div/div/div/div/form/div[4]/button').click()\n        time.sleep(2)\n        wd.find_element(By.XPATH,'//*[@id=\"app\"]/section/header/div/div[1]/div[1]/img').click()\n        time.sleep(2)\n        e1=wd.find_element(By.XPATH,'//*[@id=\"app\"]/section/div/div[1]/div/ul/div[1]/li[6]/span/span')\n        e1.click()\n        time.sleep(2)\n    \n        wd.find_element(By.XPATH,'//div[@class=\"nav\"]/div[2]/div[4]').click()#自己写的相对路径，点击问题反馈\n        wd.find_element(By.CLASS_NAME,'submit').click()\n        wd.find_element(By.XPATH,'//*[@id=\"app\"]/section/div/form/div[1]/div/div/label[1]/span[1]/span').click()\n        wd.find_element(By.XPATH,'//*[@id=\"app\"]/section/div/form/div[2]/div/div/input').send_keys(\"如何正确安装MYSQL\")\n        wd.find_element(By.XPATH,'//*[@id=\"app\"]/section/div/form/div[3]/div/div/div[1]/input').click()\n>       wd.find_element(By.XPATH,'//*[@id=\"cascader-menu-985-0-0\"]/span').click()\n\ntest_answerquestion.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:830: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C6D518E518>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C87B6E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C87B3E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"cascader-menu-985-0-0\"]/span\"}\nE         (Session info: chrome=112.0.5615.138)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00CEDCE3+50899]\nE       \t(No symbol) [0x00C7E111]\nE       \t(No symbol) [0x00B85588]\nE       \t(No symbol) [0x00BB08F9]\nE       \t(No symbol) [0x00BB0AFB]\nE       \t(No symbol) [0x00BDF902]\nE       \t(No symbol) [0x00BCB944]\nE       \t(No symbol) [0x00BDE01C]\nE       \t(No symbol) [0x00BCB6F6]\nE       \t(No symbol) [0x00BA7708]\nE       \t(No symbol) [0x00BA886D]\nE       \tGetHandleVerifier [0x00F53EAE+2566302]\nE       \tGetHandleVerifier [0x00F892B1+2784417]\nE       \tGetHandleVerifier [0x00F8327C+2759788]\nE       \tGetHandleVerifier [0x00D85740+672048]\nE       \t(No symbol) [0x00C88872]\nE       \t(No symbol) [0x00C841C8]\nE       \t(No symbol) [0x00C842AB]\nE       \t(No symbol) [0x00C771B7]\nE       \tBaseThreadInitThunk [0x773A0099+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C87B6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C87B3E+238]\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1683944080955,
      "stop" : 1683944081015,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_answerquestion"
  }, {
    "name" : "subSuite",
    "value" : "Test_Answerquestion"
  }, {
    "name" : "host",
    "value" : "mrzhai"
  }, {
    "name" : "thread",
    "value" : "33568-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_answerquestion"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "content",
    "value" : "('python',)"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "3cf5630a318e2db9.json",
  "parameterValues" : [ "('python',)" ]
}